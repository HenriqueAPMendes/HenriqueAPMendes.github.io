{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://webpack/./node_modules/@emailjs/browser/es/store/store.js","webpack://webpack/./node_modules/@emailjs/browser/es/utils/validateParams.js","webpack://webpack/./node_modules/@emailjs/browser/es/models/EmailJSResponseStatus.js","webpack://webpack/./node_modules/@emailjs/browser/es/api/sendPost.js","webpack://webpack/./node_modules/@emailjs/browser/es/index.js","webpack://webpack/./node_modules/@emailjs/browser/es/methods/send/send.js","webpack://webpack/./src/modules/email.js","webpack://webpack/./src/modules/langSwitcher.js"],"sourcesContent":["export const store = {\n    _origin: 'https://api.emailjs.com',\n};\n","export const validateParams = (publicKey, serviceID, templateID) => {\n    if (!publicKey) {\n        throw 'The public key is required. Visit https://dashboard.emailjs.com/admin/account';\n    }\n    if (!serviceID) {\n        throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\n    }\n    if (!templateID) {\n        throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\n    }\n    return true;\n};\n","export class EmailJSResponseStatus {\n    constructor(httpResponse) {\n        this.status = httpResponse ? httpResponse.status : 0;\n        this.text = httpResponse ? httpResponse.responseText : 'Network Error';\n    }\n}\n","import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport const sendPost = (url, data, headers = {}) => {\n    return new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.addEventListener('load', ({ target }) => {\n            const responseStatus = new EmailJSResponseStatus(target);\n            if (responseStatus.status === 200 || responseStatus.text === 'OK') {\n                resolve(responseStatus);\n            }\n            else {\n                reject(responseStatus);\n            }\n        });\n        xhr.addEventListener('error', ({ target }) => {\n            reject(new EmailJSResponseStatus(target));\n        });\n        xhr.open('POST', store._origin + url, true);\n        Object.keys(headers).forEach((key) => {\n            xhr.setRequestHeader(key, headers[key]);\n        });\n        xhr.send(data);\n    });\n};\n","import { init } from './methods/init/init';\nimport { send } from './methods/send/send';\nimport { sendForm } from './methods/sendForm/sendForm';\nexport { init, send, sendForm };\nexport default {\n    init,\n    send,\n    sendForm,\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\n/**\n * Send a template to the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {object} templatePrams - the template params, what will be set to the EmailJS template\n * @param {string} publicKey - the EmailJS public key\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const send = (serviceID, templateID, templatePrams, publicKey) => {\n    const uID = publicKey || store._userID;\n    validateParams(uID, serviceID, templateID);\n    const params = {\n        lib_version: '3.10.0',\n        user_id: uID,\n        service_id: serviceID,\n        template_id: templateID,\n        template_params: templatePrams,\n    };\n    return sendPost('/api/v1.0/email/send', JSON.stringify(params), {\n        'Content-type': 'application/json',\n    });\n};\n","import emailJS from '@emailjs/browser';\r\n\r\nfunction sendEmail(name, subject, message, email) {\r\n    return emailJS.send('service_8t897ee', 'template_4tzawop', {\r\n        from_name: name,\r\n        subject: subject,\r\n        message: message,\r\n        email: email\r\n    }, 'CpIWnMMLq_QKwwuKR');\r\n}\r\n\r\nconst form = document.querySelector('form');\r\n    const name = form.querySelector('.name');\r\n    const email = form.querySelector('.email');\r\n    const subject = form.querySelector('.subject');\r\n    const message = form.querySelector('.message');\r\n\r\nexport default function handleEmails() {\r\n\r\n    form.addEventListener('submit', e => {\r\n        e.preventDefault();\r\n\r\n        if (!(name.value && subject.value && message.value && email.value)) {\r\n            alert('Please complete your form correctly');\r\n            // Tornar mais amigavel ao usuario\r\n            return;\r\n        }\r\n\r\n        sendEmail(name.value, subject.value, message.value, email.value)\r\n            .then(response => {\r\n                name.value = subject.value = message.value = email.value = '';\r\n                console.log(response.status);\r\n            })\r\n            .catch(() => {\r\n                alert('An error ocured while trying to send your message, pleas try again.');\r\n                // Tornar mais amigavel ao usuario\r\n            });\r\n    });\r\n}","const data = {\r\n    \"pt\": {\r\n        home: \"Início\",\r\n        aboutMe: \"Sobre Mim\",\r\n        projects: \"Projetos\",\r\n        contact: \"Contato\",\r\n        nav: '<li><a href=\"#home\">Início</a></li><li><a href=\"#about-me\">Sobre mim<a></li><li><a href=\"#projects\">Projetos</a></li><li><a href=\"#contact\">Contato</a></li> ',\r\n        home: \"<p>Olá, sou o Henrique.</p> <p> Sou desenvolvedor e atualmente trabalho com as seguintes tecnologias: </p>\",\r\n        others: \"Outros\",\r\n        about: \"<p>Cursei meu ensino Fundamental e Médio no Colégio da Polícia Militar do Paraná (CPMPR), em Curitiba, Brasil. </p><p>Atualmente cursando Engenharia de Computação na Universidade Tecnológica Federal do Paraná (UTFPR).</p><p> Sempre fui apaixonado por tecnologia e aprender a construir coisas.</p>\",\r\n        cards: [\"Jogo em C++\",\r\n            \"Em breve\",\r\n            \"Em breve\",\r\n            \"Em breve\"\r\n        ],\r\n        submit: \"Enviar\",\r\n        placeholders: [\r\n            \"Seu nome\",\r\n            \"Seu e-mail\",\r\n            \"Assunto\",\r\n            \"Mensagem\"\r\n        ],\r\n        sourceCode: \"Saiba mais\"\r\n    },\r\n    \"en\": {\r\n        home: \"Home\",\r\n        aboutMe: \"About me\",\r\n        projects: \"Projects\",\r\n        contact: \"Contact\",\r\n        nav: '<li><a href=\"#home\">Home</a></li><li><a href=\"#about-me\">About me<a></li><li><a href=\"#projects\">Projects</a></li><li><a href=\"#contact\">Contact</a></li>',\r\n\r\n        home: \"<p>Hello, I'm Henrique.</p> <p>I'm a software developer currently working with these technologies: </p>\",\r\n        others: \"Others\",\r\n        about: \" <p>I attended elementary and high school at Colégio da Polícia Militar do Paraná (CPMPR), in Curitiba, Brazil. </p> <p> Nowadays, I'm studying Computer Engineering at Universidade Tecnológica Federal do Paraná (UTFPR). </p><p> I've always been in love with technology and learning to build things. </p>\",\r\n        cards: [\"Game in C++\",\r\n            \"Coming soon\",\r\n            \"Coming soon\",\r\n            \"Coming soon\"\r\n        ],\r\n        submit: \"Submit\",\r\n        placeholders: [\r\n            \"Your name\",\r\n            \"Your e-mail\",\r\n            \"Subject\",\r\n            \"Message\"\r\n        ],\r\n        sourceCode: \"Read more\"\r\n    }\r\n};\r\n\r\nconst switcher = document.querySelector('.switcher');\r\nconst homeText = document.querySelector('.home-text');\r\nconst aboutMeText = document.querySelector('.about-me-text');\r\nconst nav = document.querySelector('nav ul');\r\nconst readMoreBtns = document.querySelectorAll('.saiba-mais');\r\nconst sourceCodeBtns = document.querySelectorAll('.card button a');\r\nconst aboutMeTitle = document.querySelector('#about-me h2');\r\nconst projectsTitle = document.querySelector('#projects h2');\r\nconst contactTitle = document.querySelector('#contact h2');\r\nconst placeholders = document.querySelectorAll('.input-box .input ~ span');\r\nconst submitBtn = document.querySelector('form button');\r\nconst cardTitles = document.querySelectorAll('.card h3');\r\nconst others = document.querySelector('.others-stack h3');\r\n\r\nexport function listenSwitch() {\r\n    switcher.addEventListener('click', () => {\r\n        const lang = switcher.checked ? \"pt\" : \"en\";\r\n\r\n        homeText.innerHTML = data[lang].home;\r\n        aboutMeText.innerHTML = data[lang].about;\r\n\r\n        aboutMeTitle.innerText = data[lang].aboutMe.toUpperCase();\r\n        projectsTitle.innerText = data[lang].projects.toUpperCase();\r\n        contactTitle.innerText = data[lang].contact.toUpperCase();\r\n\r\n        nav.innerHTML = data[lang].nav;\r\n        readMoreBtns.forEach(el => {\r\n            el.innerHTML = data[lang].readMore;\r\n        });\r\n        sourceCodeBtns.forEach(el => {\r\n            el.innerHTML = data[lang].sourceCode;\r\n        });\r\n        placeholders.forEach((el, i) => {\r\n            el.innerHTML = data[lang].placeholders[i];\r\n        });\r\n        submitBtn.innerHTML = data[lang].submit;\r\n        cardTitles.forEach((el, i) => {\r\n            el.innerHTML = data[lang].cards[i];\r\n        });\r\n        others.innerHTML = data[lang].others;\r\n    });\r\n}"],"names":["store","_origin","validateParams","publicKey","serviceID","templateID","EmailJSResponseStatus","constructor","httpResponse","this","status","text","responseText","sendPost","url","data","headers","Promise","resolve","reject","xhr","XMLHttpRequest","addEventListener","target","responseStatus","open","Object","keys","forEach","key","setRequestHeader","send","templatePrams","uID","_userID","params","lib_version","user_id","service_id","template_id","template_params","JSON","stringify","form","document","querySelector","name","email","subject","message","home","aboutMe","projects","contact","nav","switcher","homeText","aboutMeText","readMoreBtns","querySelectorAll","sourceCodeBtns","aboutMeTitle","projectsTitle","contactTitle","placeholders","submitBtn","cardTitles","others","e","preventDefault","value","emailJS","from_name","sendEmail","then","response","console","log","alert","lang","checked","innerHTML","about","innerText","toUpperCase","el","readMore","sourceCode","i","submit","cards"],"sourceRoot":""}